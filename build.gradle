plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "meteor-maven"
		url = "https://maven.meteordev.org"
	}
	maven {
		name = "vram"
		url = "https://maven.vram.io//"
	}
}

configurations {
	modIncludeImplementation

	include.extendsFrom modIncludeImplementation
	modImplementation.extendsFrom modIncludeImplementation
}


dependencies {
	def library = { id ->
		implementation(id) { exclude group: "org.slf4j" }
		shadow(id) { exclude group: "org.slf4j" }
	}

	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Compat fixes


	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include "me.jellysquid.mods:sodium-fabric:${project.sodium_version}"

	library "org.reflections:reflections:${project.reflections_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
